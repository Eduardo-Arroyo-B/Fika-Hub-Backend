generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  user      String
  email     String?  @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  orders    Orders[]
}

model Clients {
  id     Int      @id @default(autoincrement())
  name   String
  email  String?
  phone  String
  orders Orders[]
}

model Pasteles {
  id        Int         @id @default(autoincrement())
  type      PastelType // Tipo de pastel (clásico, deluxe, etc.)
  flavors   Flavors[]
  sizes     Sizes[]
  category  Category[]
  OrderItem OrderItem[]
}

model Category {
  id       Int        @id @default(autoincrement())
  name     String
  Pasteles Pasteles[] // Relación con pasteles
  flavors  Flavors[]
  sizes    Sizes[]
}

// Enum para definir los tipos de pasteles
enum PastelType {
  CLASIC
  DELUXE
  SPONGE_CAKE
  TRADITIONAL
}

model Flavors {
  id          Int           @id @default(autoincrement())
  name        String
  Pasteles    Pasteles[] // Relación con Pasteles
  ingredients Ingredients[] // Relación con ingredientes
  category    Category[] // Relación con categorías
  OrderItem   OrderItem[]
}

model Sizes {
  id        Int         @id @default(autoincrement())
  size      String
  Pasteles  Pasteles[] // Relación con Pasteles
  category  Category[] // Relación con categorías
  OrderItem OrderItem[]
}

model Orders {
  id        Int         @id @default(autoincrement())
  User      User        @relation(fields: [userId], references: [id])
  userId    Int
  Clients   Clients     @relation(fields: [clientsId], references: [id])
  clientsId Int
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  OrderItem OrderItem[]
}

model OrderItem {
  id               Int      @id @default(autoincrement())
  Orders           Orders   @relation(fields: [ordersId], references: [id])
  ordersId         Int
  Pasteles         Pasteles @relation(fields: [pastelId], references: [id])
  pastelId         Int
  Flavor           Flavors  @relation(fields: [flavorId], references: [id])
  flavorId         Int
  Size             Sizes    @relation(fields: [sizeId], references: [id])
  sizeId           Int
  mensaje          String?
  fechaRecoleccion String
  status           String   @default("PENDING") // Estado del pedido (pendiente, entregado)
  quantity         Int
}

model Ingredients {
  id        Int       @id @default(autoincrement())
  name      String
  available Boolean   @default(true)
  flavors   Flavors[] // Relación con sabores
}
